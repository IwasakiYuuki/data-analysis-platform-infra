- name: Create user
  user:
    name: airflow
    shell: /bin/bash
    home: /home/airflow
    create_home: yes

- name: Install venv package
  apt:
    name:
      - python3-venv
      - libkrb5-dev
      - libsasl2-dev
      - libldap2-dev
      - libssl-dev
    state: present

- name: Create a virtual environment
  command: python3 -m venv "{{ airflow_venv }}"
  args:
    creates: "{{ airflow_venv }}"

- name: Install Airflow with pip
  command: "{{ airflow_venv }}/bin/pip install \"apache-airflow=={{ airflow_version }}\" --constraint {{ constraint_url }}"

- name: Install Airflow kerberos extension with pip
  command: "{{ airflow_venv }}/bin/pip install apache-airflow[kerberos]"

- name: Install Airflow hdfs extension with pip
  command: "{{ airflow_venv }}/bin/pip install apache-airflow[hdfs]"

- name: Create Airflow directory
  file:
    path: "{{ ansible_env.HOME }}/airflow"
    state: directory

- name: Copy the airflow.cfg file
  template:
    src: "{{ item }}.j2" 
    dest: "/home/airflow/airflow/{{ item }}"
  loop:
    - airflow.cfg
    - webserver_config.py

- name: Create keytab directory
  file:
    path: /etc/security/airflow
    state: directory

- name: Set a keytab file
  copy:
    src: airflow.keytab
    dest: /etc/security/airflow/airflow.keytab

- name: Migrate the database
  command: "{{ airflow_venv }}/bin/airflow db migrate"

- name: Copy systemd service file
  copy:
    src: "{{ item }}.service"
    dest: "/etc/systemd/system/{{ item }}.service"
    owner: root
    group: root
    mode: '0644'
  loop:
    - airflow-standalone
    - airflow-kerberos

- name: Reload systemd
  ansible.builtin.systemd:
    daemon_reload: yes

- name: Start and enable Airflow services
  ansible.builtin.systemd:
    name: "{{ item }}"
    state: started
    enabled: yes
  loop:
    - airflow-standalone
    - airflow-kerberos
